OVERVIEW
--------
1. Install Git and clone the repository
2. Install python, together with pip and virtualenv
   (see requirements.txt for the full list of python dependencies)
3. Install Postgres and setup the database
4. Run Django migrations and populate the database with our map builder
5. Development server: python manage.py runserver

MAC OS X INSTRUCTIONS
---------------------
1. Make sure you have git installed and setup
   https://help.github.com/articles/set-up-git/
2. Get the repository
     git clone https://github.com/jorshi/seng330
3. Get python setup
   https://www.python.org/downloads/
   a. Install PIP for package management, if you don’t have it already. Python 2.7.10 should ship with it included.
      https://pip.pypa.io/en/stable/installing/
   b. Install virtualenv
        pip install virtualenv
4. Get Database setup
   http://www.postgresql.org/download/
   On Mac OS I used postgres.app
   a. Start an instance of postgres
      Can check on the command line by running psql, which should log you into 
      the postgres command line interface.
      \q to exit
   b. Run the database setup script for the gamesite application
        psql < seng330/setup_db.sql
5. Setup a virtualenv
   Navigate in seng330
     cd seng330
   Create a new virtualenv called venv
     virtualenv venv
   Activate the virtualenv
     source venv/bin/activate
6. Install the dependencies
     pip install -r requirements.txt
7. Run migrations to setup DB
     python manage.py migrate
     python manage.py makemigrations
     python manage.py mapbuilder test03
   Will probably ask you to create a superuser, follow prompts to setup a user 
   for yourself
   If it doesn’t ask you for a superuser, not a bad idea to do it anyways by 
   running ‘python manage.py createsuperuser’
8. Start the development server
     python manage.py runserver
   Should start up and tell you where it is running at (ie. 127.0.0.1:8000)
   Open a browser and navigate to the given address
9. You’ll notice that through all this git sees that you have new untracked 
   files, we want to ignore these.
   Create a file called ‘.gitignore’ in the seng330 directory
   Add ‘*.pyc’, ‘venv’ & ‘.gitignore’ to this file, in a list separated by new 
   lines
10. Bravo! Dev environment is ready to go :)


WINDOWS INSTRUCTIONS
--------------------
1. Install Git (Git For Windows or GitHub Desktop are good choices)
2. Install Python 2.7 (I installed to C:\Python27 without adding to my PATH)
3. Run pip:
     C:\Python27\Scripts\pip install virtualenv
4. Install and run Postgres
   a. install Visual C++ compiler for Python
   b. install Postgres (enter a password for the postgres account)
5. Clone the project from GitHub into a folder of your choice
6. Install project requirements
   a. cd into the project (seng330) and create a virtualenv in it:
     C:\Python27\Scripts\virtualenv venv
     venv\Scripts\activate
     pip install -r requirements.txt
7. Set up database
     “%PROGRAMFILES(x86)%\Postgres\bin\psql.exe” -U postgres < setup_db.sql
   enter the password you set when installing Postgres
   (I’m running 64-bit Windows, omit the (x86) otherwise)
8. Run the following commands:
     python manage.py migrate
     python manage.py makemigrations
     python manage.py mapbuilder test03
     python manage.py runserver
   Should start up and tell you where it is running at (ie. 127.0.0.1:8000)
   Open a browser and navigate to the given address
9. You’ll notice that through all this git sees that you have new untracked 
   files, we want to ignore these.
   Create a file called ‘.gitignore’ in the seng330 directory
   Add ‘*.pyc’, ‘venv’ & ‘.gitignore’ to this file, in a list separated by new 
   lines
10. Bravo! Dev environment is ready to go :)
